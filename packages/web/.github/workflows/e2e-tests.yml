name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  e2e-tests:
    name: E2E Tests (${{ matrix.browser }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        include:
          - browser: chromium
            project: chromium
          - browser: firefox
            project: firefox
          - browser: webkit
            project: webkit

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.project }}

      - name: Build application
        run: npm run build

      - name: Start application
        run: npm start &
        env:
          PORT: 3000

      - name: Wait for application to be ready
        run: npx wait-on http://localhost:3000

      - name: Run E2E tests
        run: npx playwright test --project=${{ matrix.project }} --reporter=html,github,json --output-dir=playwright-report-${{ matrix.browser }}
        env:
          CI: true

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.browser }}
          path: playwright-report-${{ matrix.browser }}/
          retention-days: 30

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots-${{ matrix.browser }}
          path: test-results/
          retention-days: 7

      - name: Upload videos
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: videos-${{ matrix.browser }}
          path: test-results/videos/
          retention-days: 7

  mobile-tests:
    name: Mobile E2E Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Build application
        run: npm run build

      - name: Start application
        run: npm start &
        env:
          PORT: 3000

      - name: Wait for application to be ready
        run: npx wait-on http://localhost:3000

      - name: Run mobile E2E tests
        run: npx playwright test --project="Mobile Chrome" --project="Mobile Safari" --reporter=html,github
        env:
          CI: true

      - name: Upload mobile test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-mobile
          path: playwright-report/
          retention-days: 30

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Build application
        run: npm run build

      - name: Start application
        run: npm start &
        env:
          PORT: 3000

      - name: Wait for application to be ready
        run: npx wait-on http://localhost:3000

      - name: Run performance tests
        run: npx playwright test tests/e2e/performance/ --reporter=html,github
        env:
          CI: true

      - name: Upload performance test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-report
          path: playwright-report/
          retention-days: 30

  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Build application
        run: npm run build

      - name: Start application
        run: npm start &
        env:
          PORT: 3000

      - name: Wait for application to be ready
        run: npx wait-on http://localhost:3000

      - name: Install axe-playwright
        run: npm install --save-dev @axe-core/playwright

      - name: Run accessibility tests
        run: npx playwright test tests/e2e/accessibility/ --reporter=html,github || true
        env:
          CI: true

      - name: Upload accessibility test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: accessibility-report
          path: playwright-report/
          retention-days: 30

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [e2e-tests, mobile-tests, performance-tests]
    if: always()

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Comment PR with results
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const path = './playwright-report-chromium/report.html';

            let comment = '## üé≠ E2E Test Results\n\n';

            if (fs.existsSync(path)) {
              comment += '‚úÖ **Tests completed successfully**\n\n';
              comment += '### üìä Browser Results:\n';
              comment += '- ‚úÖ Chromium\n';
              comment += '- ‚úÖ Firefox\n';
              comment += '- ‚úÖ WebKit\n';
              comment += '- ‚úÖ Mobile Chrome\n';
              comment += '- ‚úÖ Mobile Safari\n';
              comment += '- ‚úÖ Performance Tests\n\n';
            } else {
              comment += '‚ùå **Tests failed**\n\n';
            }

            comment += '### üìã Test Categories:\n';
            comment += '- üéØ Critical User Journeys\n';
            comment += '- üß© Component Interactions\n';
            comment += '- üì± Responsive Design\n';
            comment += '- üìà Performance Tests\n';
            comment += '- üîÑ Data Flow Tests\n\n';

            comment += '### üìä View detailed reports:\n';
            comment += 'Check the "Artifacts" section in the Actions tab for detailed HTML reports.\n\n';
            comment += '### üöÄ To run tests locally:\n';
            comment += '```bash\n';
            comment += 'npm run test:e2e\n';
            comment += '```';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  notify-slack:
    name: Notify Slack
    runs-on: ubuntu-latest
    needs: [e2e-tests, mobile-tests, performance-tests]
    if: always() && github.ref == 'refs/heads/main'

    steps:
      - name: Notify Slack on success
        if: needs.e2e-tests.result == 'success' && needs.mobile-tests.result == 'success' && needs.performance-tests.result == 'success'
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"‚úÖ E2E Tests Passed - Cross-Chain Bitcoin Yield Vault\n\nüìä All browser tests passed successfully!\nüéØ Critical user journeys verified\nüì± Mobile responsiveness confirmed\nüìà Performance metrics within thresholds"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack on failure
        if: needs.e2e-tests.result == 'failure' || needs.mobile-tests.result == 'failure' || needs.performance-tests.result == 'failure'
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"‚ùå E2E Tests Failed - Cross-Chain Bitcoin Yield Vault\n\nüö® Some tests have failed. Please check the GitHub Actions for detailed reports.\nüîó Repository: '"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"'"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}